<!DOCTYPE html>
<html>
	<head>
    <title>Chessmojo</title>
	%#<link rel="stylesheet" type="text/css" href="/cssreset.css" />
    <link rel="stylesheet" type="text/css" href="<%= url_for('style')->to_abs %>" />

%###################################### JAVASCRIPT #######################################
		<script type="text/javascript" src="/jQuery.js" >
			where do i put this??????
							$('.inputcolor').keyup(function (e) {
					if (e.keyCode === 13)) {
					   alert('ya!')
					}
				});


		</script>
		<script type="text/javascript">
			var ws
			var lcmoves // great because we don't have to send to server.  this IS local, will not show up on opponent's computer
			var height = 3.6

			if ("WebSocket" in window) { ws = new WebSocket('<%= url_for('socket')->to_abs."?room=$roomname" %>') }
			if(typeof(ws) !== 'undefined') {
				function shorp(){
					document.getElementById('preferences').style.height = "40vmin"
					document.getElementById('login').style.height = "10vmin"
					document.getElementById('container').innerHTML += ' shorp()<br /><br />'

					%#var wsquares = document.getElementsByClassName('whitesquares')
					%#for (i=0; i<wsquares.length; ++i){
					%#	wsquares[i].style.fill = "white"
					%#	wsquares[i].style.backgroundColor = "white"
					%#}
					document.styleSheets[1].insertRule('.button:hover { background-color: white }', 0)
					document.styleSheets[1].insertRule('.whitesquares { background-color: white; fill: white }', 0)


				}
				function changeHeight() {
					document.getElementById('login').style.height = height+"vmin"
					height = 62-height
					document.getElementById('preferences').style.height = height+"vmin"
				}
				function unfillSquares(coords) {
					for (i=0; i<coords.length; ++i){
						document.getElementById(coords[i]).removeAttribute('style')
					}
				}
				function sendCoord(evt) {
					x = evt.currentTarget.getAttribute('x')
					y = evt.currentTarget.getAttribute('y')
					ws.send( JSON.stringify({'command': 'squareclicked', 'x': x, 'y': 9-y}) )
				}
				function sendMessage(evt,message) {
						ws.send( JSON.stringify({'command': 'donothing', 'message': message}) )
				}
				ws.onmessage = function (event) {
					var json = JSON.parse(event.data)
					if( typeof(json.y) !== 'undefined' ){ json.y = 9-json.y }

					//document.getElementById('container').innerHTML += ' Command is "'+json.command+'".' + '<br />'
					if( typeof(json.message) !== 'undefined' ){
						//document.getElementById('container').innerHTML += ' message is "'+json.message+'".' + '<br /><br />'
					}

					if( json.command=='fillsquares' ){
						if( typeof(lcmoves) !== 'undefined' ){ unfillSquares(lcmoves) }
						for (i=0; i<json.moves.length; ++i){
							document.getElementById(json.moves[i]).setAttribute('style',"opacity:0.5")
						}
						lcmoves = json.moves
					}

					if( json.command=='movepiece' ){
						if( typeof(lcmoves) !== 'undefined' ){ unfillSquares(lcmoves) }
						document.getElementById(json.ID).setAttribute('x',json.x)
						document.getElementById(json.ID).setAttribute('y',json.y)
					}
					if( typeof(json.IDtoremove) !== 'undefined' ){
						document.getElementById(json.IDtoremove).setAttribute('x',-1)
						document.getElementById(json.IDtoremove).setAttribute('y',-1)
					}


				}
				ws.onopen = function (event) {
					document.getElementById('container').innerHTML += ' jsworking. '
					sendMessage(event,'WebSocket support works! â™¥')
				}
			}
			else {
				document.body.innerHTML += 'Browser does not support WebSockets.'
			}
		</script>
	</head>

%###################################### HTML (BODY) ######################################
	<body>
		<div id="left">
				<h1>Chessmojo!</h1>
				(swipe left/right to show/hide this panel)<br />
				<br />
				Play as <select><option value="white">white</option><option value="black">black</option></select><br />
				Timer: <select><option value="15">15 min</option><option value="10">10 min</option><option value="5">5 min</option></select><br />
				<br />
				<div class="button" onclick="shorp()">Start New Game!</div><br />

				<div id="login" class="dropdown">
					<h2 onclick="changeHeight()">Login</h2>
					<br />
					<input id="username" placeholder="Username" /> <input type="button" value="Login" />
				</div>
				<div id="preferences" class="dropdown">
					<h2 onclick="changeHeight()">Preferences</h2>
					<br />
					<br />
					<!-- begin svg stuff -->
						<div class="displaypiece whitesquares right"></div>
						<div class="descriptionbox right"><span>white<br />square color<br /># <input class="inputcolor" placeholder="<%== $whitesquarecolor; %>" /></span></div>
						<div class="displaypiece blacksquares left"></div>
						<div class="descriptionbox left"><span>black<br />square color<br /># <input class="inputcolor" placeholder="<%== $blacksquarecolor; %>" /></span></div>
						<br />
						<div class="displaypiece blacksquares nofill right">
							<%== SVG::renderInlinePieceSVGOfColor( 'white', class=>"smallsvg", viewBox=>"0 0 1 1" ) %>
						</div>
						<div class="descriptionbox right"><span>white<br />stroke color<br /># <input class="inputcolor" placeholder="<%== $whitestrokecolor; %>" /></span></div>
						<div class="displaypiece whitesquares nofill left">
							<%== SVG::renderInlinePieceSVGOfColor( 'black', class=>"smallsvg", viewBox=>"0 0 1 1" ) %>
						</div>
						<div class="descriptionbox left"><span>black<br />stroke color<br /># <input class="inputcolor" placeholder="<%== $blackstrokecolor; %>" /></span></div>
						<br />
						<div class="displaypiece whitesquares right">
							<%== SVG::renderInlinePieceSVGOfColor( 'white', class=>"smallsvg", viewBox=>"0 0 1 1" ) %>
						</div>
						<div class="descriptionbox right"><span>white<br />piece color<br /># <input class="inputcolor" placeholder="<%== $whitepiececolor; %>" /></span></div>
						<div class="displaypiece blacksquares left">
							<%== SVG::renderInlinePieceSVGOfColor( 'black', class=>"smallsvg", viewBox=>"0 0 1 1" ) %>
						</div>
						<div class="descriptionbox left"><span>black<br />piece color<br /># <input class="inputcolor" placeholder="<%== $blackpiececolor; %>" /></span></div>
					<!-- end svg stuff -->
					<br />
					<div class="checkboxes">
						<input type="checkbox" name="varname" value="avalue">highlight opponent's move</input><br />
						<input type="checkbox" name="sound" value="avalue">play sound when opponent moves</input><br />
					</div>
					<br />
					%#<button>i'm a real button</button><br />
					<%#<div class="buttonborder bottom">%><div class="button bottom left">Discard Changes</div><%#</div>%>
					<%#<div class="buttonborder bottom">%><div class="button bottom right">Save to Profile</div><%#</div>%>
				</div>

		</div>
		<div id="container">
			<%== $mojo::svg->renderInline( id=>"bigsvg", viewBox=>"0 0 10 10" ) %>
		</div>
	</body>
</html>
